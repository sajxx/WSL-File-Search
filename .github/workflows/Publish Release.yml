name: Publish Release

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore: 
      - .github/workflows/*
      - README.md
      - .gitignore

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      python_ver: 3.8
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ env.python_ver }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python_ver }}
          
      - name: Get version from plugin.json
        id: version
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: 'plugin.json'
          prop_path: 'Version'
          
      - run: echo "Plugin version is ${{steps.version.outputs.prop}}"
      
      - name: Create requirements.txt if not exists
        run: |
          if [ ! -f requirements.txt ]; then
            echo flowlauncher>=0.2.0 > requirements.txt
          fi

      - name: Install dependencies to lib directory
        run: |
          python -m pip install --upgrade pip
          mkdir -p lib
          # Try to install flowlauncher with fallbacks
          pip install flowlauncher -t ./lib --no-cache-dir || \
          pip install flowlauncher==0.2.0 -t ./lib --no-cache-dir || \
          pip install "flowlauncher>=0.1.0" -t ./lib --no-cache-dir || \
          echo "Could not install flowlauncher - plugin will handle missing dependency"
          
      - name: Clean up lib directory
        run: |
          if [ -d "./lib" ]; then
            find ./lib -name "*.pyc" -delete 2>/dev/null || true
            find ./lib -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
            find ./lib -name "*.dist-info" -type d -exec rm -rf {} + 2>/dev/null || true
            find ./lib -name "*.egg-info" -type d -exec rm -rf {} + 2>/dev/null || true
          fi
          
      - name: Create plugin package
        run: |
          # Create build directory to avoid copying into self
          mkdir -p build
          mkdir -p "build/WSL File Search"
          
          # Copy essential files
          cp main.py "build/WSL File Search/"
          cp plugin.json "build/WSL File Search/"
          cp icon.png "build/WSL File Search/"
          
          # Copy optional files if they exist
          [ -f SettingsTemplate.yaml ] && cp SettingsTemplate.yaml "build/WSL File Search/" || echo "No SettingsTemplate.yaml"
          [ -f README.md ] && cp README.md "build/WSL File Search/" || echo "No README.md"
          [ -f LICENSE ] && cp LICENSE "build/WSL File Search/" || echo "No LICENSE"
          
          # Copy lib directory if it exists
          if [ -d "./lib" ] && [ "$(ls -A ./lib 2>/dev/null)" ]; then
            cp -r ./lib "build/WSL File Search/"
          fi
          
          # Create zip from build directory
          cd build
          zip -r "../WSL File Search.zip" "WSL File Search/"
          cd ..
          
          # Verify zip was created
          ls -la "WSL File Search.zip"
          
      - name: Publish Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          files: 'WSL File Search.zip'
          tag_name: "v${{steps.version.outputs.prop}}"
          body: |
            **WSL File Search Plugin v${{steps.version.outputs.prop}}**
            
            Search files inside WSL using fd with seamless Windows integration.
            
            **Features:**
            - ‚ö° Ultra-fast search using fd
            - üéØ Configurable result limits
            - üóÇÔ∏è Open files in Windows Explorer
            - ‚å®Ô∏è Terminal access via Windows Terminal
            - ‚öôÔ∏è User-friendly settings
            
            **Installation:**
            1. Download WSL File Search.zip
            2. Extract to: `%APPDATA%\FlowLauncher\Plugins\`
            3. Restart Flow Launcher
            4. Use `wslf` keyword to search WSL files
            
            **Requirements:**
            - WSL 2 with Ubuntu/Debian
            - fd installed in WSL (`sudo apt install fd-find`)
            - Flow Launcher v1.20+
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}